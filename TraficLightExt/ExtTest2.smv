
MODULE button(someonePress, isRed)
VAR 
	state : {pressed, released};
	isPressed : boolean;
ASSIGN
	init(state) := released;
	next(state) := case
						state = released & next(someonePress) : pressed;
						--Pour faire en sorte que le bouton passe à l'état relaché quand le feu des voitures est vert.
						--Car il restait à l'état pressed lorsque le feu des voitures était vert.
						--En gros: Lorsque le bouton est à l'état pressed et que le feu est vert pour les voitures
						-- la variable someonePress passe à FALSE pour que le button passe à released en dessous.
						state = pressed & next(!someonePress) : released;
						TRUE : state;
					esac;
	
	init(isPressed) :=FALSE;
	next(isPressed) := case
						isRed : FALSE;
						next(state) = pressed : TRUE;
						TRUE : isPressed;
					esac;

	
	
MODULE pedestrianLight(youcango)
VAR 
	state : {red, green};
	
ASSIGN
	next(state) :=  case 	
						state = red & next(youcango) : green;
						state = green & next(!youcango) : red;
						TRUE : state;
					esac;


MODULE carLight(buttonHasBeenPress)
	VAR
		state : {red, yellow, green};
		tick : 0..10;
		isRed : boolean;

	ASSIGN
		init(state) := red;
		next(state) := case
							state = red & tick = 0 : green;
							state = green & tick = 0 & buttonHasBeenPress : yellow;
							state = yellow & tick = 0 : red;
							TRUE : state;
						esac;
		
		

		init(tick) := 0;
		next(tick) := case
							tick = 0 & state = red : 10;
							tick = 0 & next(state = yellow) : 2;
							tick = 0 & state = green : 0;
							tick = 0 & state = yellow : 5;
							TRUE : tick - 1;
						esac;

		init(isRed) := TRUE;
		--Droit de passage au tick suivant ! Donc anticipé le coup suivant
		next(isRed) := case
							next(state = red) : TRUE;
							next(state = green) : FALSE;
							next(state = yellow) : FALSE;
						esac;


MODULE main
	VAR
		car_l : carLight(ped_b.isPressed);
		ped_l : pedestrianLight(car_l.isRed);
		isPushed : boolean;
		--Si tu veux voir l'évolution : le feu de voiture reste green quand c'est FALSE, si TRUE il
		--passe yellow puis red comme avant avant de revenir green pendant au moins 10 ticks
		ped_b : button(isPushed,car_l.isRed);
		--ped_b : button(FALSE);

		

	
	--Propriété P2 EN CTL partie voiture est TRUE comme convenu car le piéton n'appuie pas sur le bouton dans cas.
	SPEC AF (car_l.state = green)
	--Propriété P2 en LTL partie voiture est TRUE comme convenu car le piéton n'appuie pas sur le bouton dans cas.
	LTLSPEC F (car_l.state = green);



