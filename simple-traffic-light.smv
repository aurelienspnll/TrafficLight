MODULE pedestrianLight(youcango)
    VAR
        state : { red, green };

    ASSIGN
        next(state) :=  case
                            state = red & next(youcango) : green;
                            state = green & next(!youcango) : red;
                            TRUE : state;
                        esac;


MODULE carLight
	VAR
		state : {red, yellow, green};
		tick : 0..10;
		isRed : boolean;

	ASSIGN
		init(state) := red;
		next(state) := case
							state = red & tick = 0 : green;
							state = green & tick = 0 : yellow;
							state = yellow & tick = 0 : red;
							TRUE : state;
						esac;

		init(tick) := 0;
		next(tick) := case
							tick = 0 & state = red : 10;
							tick = 0 & state = green : 2;
							tick = 0 & state = yellow : 5;
							TRUE : tick - 1;
						esac;

		init(isRed) := TRUE;
		--Droit de passage au tick suivant ! Donc anticipé le coup suivant
		next(isRed) := case
							next(state = red): TRUE;
							TRUE : FALSE;
						esac;







MODULE main
	VAR
		car_l : carLight;
		ped_l : pedestrianLight(car_l.isRed);

    ASSIGN
        --CTL P1
        -- Il n'existe pas de cas où le feu n'est pas rouge (-> est jaune ou vert) et que le feu de pieton
        -- est vert
        SPEC EG !(!(car_l.state = red) & ped_l.state = green);
        --CTL P2
        -- Pour tester la vivacité, on fait un systeme bidon qui est toujours à rouger -> alors notre pp ne passera plus


        --LTL P1
        --LTLSPEC G !(!(car_l.state = red) & ped_l.state = green);
